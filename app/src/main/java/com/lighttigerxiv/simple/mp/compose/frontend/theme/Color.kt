package com.lighttigerxiv.simple.mp.compose.frontend.theme

import androidx.compose.ui.graphics.Color
import com.lighttigerxiv.catppuccin_kt.getFrappeColors
import com.lighttigerxiv.catppuccin_kt.getLatteColors
import com.lighttigerxiv.catppuccin_kt.getMacchiatoColors
import com.lighttigerxiv.catppuccin_kt.getMochaColors
import com.lighttigerxiv.whiskers_palette_kt.getPantherPalette
import com.lighttigerxiv.whiskers_palette_kt.getTigerPalette


object AppTheme {
    object Blue {
        object Dark {
            val PRIMARY = Color(0xFFA6C8FF)
            val ON_PRIMARY = Color(0xFF003060)
            val PRIMARY_CONTAINER = Color(0xFF004787)
            val ON_PRIMARY_CONTAINER = Color(0xFFD5E3FF)
            val SECONDARY = Color(0xFFA6C8FF)
            val ON_SECONDARY = Color(0xFF003060)
            val SECONDARY_CONTAINER = Color(0xFF004787)
            val ON_SECONDARY_CONTAINER = Color(0xFFD5E3FF)
            val TERTIARY = Color(0xFFA6C8FF)
            val ON_TERTIARY = Color(0xFF003060)
            val TERTIARY_CONTAINER = Color(0xFF004787)
            val ON_TERTIARY_CONTAINER = Color(0xFFD5E3FF)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF1A1C1E)
            val ON_BACKGROUND = Color(0xFFE3E2E6)
            val SURFACE = Color(0xFF1A1C1E)
            val ON_SURFACE = Color(0xFFE3E2E6)
            val SURFACE_VARIANT = Color(0xFF43474E)
            val ON_SURFACE_VARIANT = Color(0xFFC4C6CF)
            val OUTLINE = Color(0xFF8D9199)
            val INVERSE_ON_SURFACE = Color(0xFF1A1C1E)
            val INVERSE_SURFACE = Color(0xFFE3E2E6)
            val INVERSE_PRIMARY = Color(0xFF225FA6)
            val SURFACE_TINT = Color(0xFFA6C8FF)
        }

        object Light {
            val PRIMARY = Color(0xFF225FA6)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFD5E3FF)
            val ON_PRIMARY_CONTAINER = Color(0xFF001C3B)
            val SECONDARY = Color(0xFF225FA6)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFD5E3FF)
            val ON_SECONDARY_CONTAINER = Color(0xFF001C3B)
            val TERTIARY = Color(0xFF225FA6)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFD5E3FF)
            val ON_TERTIARY_CONTAINER = Color(0xFF001C3B)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFDAD6)
            val ERROR_CONTAINER = Color(0xFFFFFFFF)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFDFBFF)
            val ON_BACKGROUND = Color(0xFF1A1C1E)
            val SURFACE = Color(0xFFFDFBFF)
            val ON_SURFACE = Color(0xFF1A1C1E)
            val SURFACE_VARIANT = Color(0xFFE0E2EC)
            val ON_SURFACE_VARIANT = Color(0xFF43474E)
            val OUTLINE = Color(0xFF74777F)
            val INVERSE_ON_SURFACE = Color(0xFFF1F0F4)
            val INVERSE_SURFACE = Color(0xFF2F3033)
            val INVERSE_PRIMARY = Color(0xFFA6C8FF)
            val SURFACE_TINT = Color(0xFF225FA6)
        }
    }

    object Red {
        object Dark {
            val PRIMARY = Color(0xFFFFB3B0)
            val ON_PRIMARY = Color(0xFF680010)
            val PRIMARY_CONTAINER = Color(0xFF92001B)
            val ON_PRIMARY_CONTAINER = Color(0xFFFFDAD8)
            val SECONDARY = Color(0xFFFFB3B0)
            val ON_SECONDARY = Color(0xFF680010)
            val SECONDARY_CONTAINER = Color(0xFF92001B)
            val ON_SECONDARY_CONTAINER = Color(0xFFFFDAD8)
            val TERTIARY = Color(0xFFFFB3B0)
            val ON_TERTIARY = Color(0xFF680010)
            val TERTIARY_CONTAINER = Color(0xFF92001B)
            val ON_TERTIARY_CONTAINER = Color(0xFFFFDAD8)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF93000A)
            val ERROR_CONTAINER = Color(0xFF690005)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF201A1A)
            val ON_BACKGROUND = Color(0xFFEDE0DE)
            val SURFACE = Color(0xFF201A1A)
            val ON_SURFACE = Color(0xFFEDE0DE)
            val SURFACE_VARIANT = Color(0xFF524342)
            val ON_SURFACE_VARIANT = Color(0xFFD7C1C0)
            val OUTLINE = Color(0xFFA08C8B)
            val INVERSE_ON_SURFACE = Color(0xFF201A1A)
            val INVERSE_SURFACE = Color(0xFFEDE0DE)
            val INVERSE_PRIMARY = Color(0xFFBF0027)
            val SURFACE_TINT = Color(0xFFFFB3B0)
        }

        object Light {
            val PRIMARY = Color(0xFFBF0027)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFFFDAD8)
            val ON_PRIMARY_CONTAINER = Color(0xFF410007)
            val SECONDARY = Color(0xFFBF0027)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFFFDAD8)
            val ON_SECONDARY_CONTAINER = Color(0xFF410007)
            val TERTIARY = Color(0xFFBF0027)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFFFDAD8)
            val ON_TERTIARY_CONTAINER = Color(0xFF410007)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFFFBFF)
            val ON_BACKGROUND = Color(0xFF201A1A)
            val SURFACE = Color(0xFFFFFBFF)
            val ON_SURFACE = Color(0xFF201A1A)
            val SURFACE_VARIANT = Color(0xFFF4DDDC)
            val ON_SURFACE_VARIANT = Color(0xFF524342)
            val OUTLINE = Color(0xFF857372)
            val INVERSE_ON_SURFACE = Color(0xFFFBEEED)
            val INVERSE_SURFACE = Color(0xFF362F2E)
            val INVERSE_PRIMARY = Color(0xFFFFB3B0)
            val SURFACE_TINT = Color(0xFFBF0027)
        }
    }

    object Purple {
        object Dark {
            val PRIMARY = Color(0xFFCFBCFF)
            val ON_PRIMARY = Color(0xFF381E72)
            val PRIMARY_CONTAINER = Color(0xFF4F378A)
            val ON_PRIMARY_CONTAINER = Color(0xFFE9DDFF)
            val SECONDARY = Color(0xFFCFBCFF)
            val ON_SECONDARY = Color(0xFF381E72)
            val SECONDARY_CONTAINER = Color(0xFF4F378A)
            val ON_SECONDARY_CONTAINER = Color(0xFFE9DDFF)
            val TERTIARY = Color(0xFFCFBCFF)
            val ON_TERTIARY = Color(0xFF381E72)
            val TERTIARY_CONTAINER = Color(0xFF4F378A)
            val ON_TERTIARY_CONTAINER = Color(0xFFE9DDFF)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF1C1B1E)
            val ON_BACKGROUND = Color(0xFFE6E1E6)
            val SURFACE = Color(0xFF1C1B1E)
            val ON_SURFACE = Color(0xFFE6E1E6)
            val SURFACE_VARIANT = Color(0xFF49454E)
            val ON_SURFACE_VARIANT = Color(0xFFCAC4CF)
            val OUTLINE = Color(0xFF948F99)
            val INVERSE_ON_SURFACE = Color(0xFF1C1B1E)
            val INVERSE_SURFACE = Color(0xFFE6E1E6)
            val INVERSE_PRIMARY = Color(0xFF6750A4)
            val SURFACE_TINT = Color(0xFFCFBCFF)
        }

        object Light {
            val PRIMARY = Color(0xFF6750A4)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFE9DDFF)
            val ON_PRIMARY_CONTAINER = Color(0xFF22005D)
            val SECONDARY = Color(0xFF6750A4)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFE9DDFF)
            val ON_SECONDARY_CONTAINER = Color(0xFF22005D)
            val TERTIARY = Color(0xFF6750A4)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFE9DDFF)
            val ON_TERTIARY_CONTAINER = Color(0xFF22005D)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFFFBFF)
            val ON_BACKGROUND = Color(0xFF1C1B1E)
            val SURFACE = Color(0xFFFFFBFF)
            val ON_SURFACE = Color(0xFF1C1B1E)
            val SURFACE_VARIANT = Color(0xFFE7E0EB)
            val ON_SURFACE_VARIANT = Color(0xFF49454E)
            val OUTLINE = Color(0xFF7A757F)
            val INVERSE_ON_SURFACE = Color(0xFFF4EFF4)
            val INVERSE_SURFACE = Color(0xFF313033)
            val INVERSE_PRIMARY = Color(0xFFCFBCFF)
            val SURFACE_TINT = Color(0xFF6750A4)
        }
    }

    object Yellow {
        object Dark {
            val PRIMARY = Color(0xFFE2C624)
            val ON_PRIMARY = Color(0xFF393000)
            val PRIMARY_CONTAINER = Color(0xFF524600)
            val ON_PRIMARY_CONTAINER = Color(0xFFFFE249)
            val SECONDARY = Color(0xFFE2C624)
            val ON_SECONDARY = Color(0xFF393000)
            val SECONDARY_CONTAINER = Color(0xFF524600)
            val ON_SECONDARY_CONTAINER = Color(0xFFFFE249)
            val TERTIARY = Color(0xFFE2C624)
            val ON_TERTIARY = Color(0xFF393000)
            val TERTIARY_CONTAINER = Color(0xFF524600)
            val ON_TERTIARY_CONTAINER = Color(0xFFFFE249)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF1D1B16)
            val ON_BACKGROUND = Color(0xFFE7E2D9)
            val SURFACE = Color(0xFF1D1B16)
            val ON_SURFACE = Color(0xFFE7E2D9)
            val SURFACE_VARIANT = Color(0xFF4A4739)
            val ON_SURFACE_VARIANT = Color(0xFFCDC6B4)
            val OUTLINE = Color(0xFF969080)
            val INVERSE_ON_SURFACE = Color(0xFF1D1B16)
            val INVERSE_SURFACE = Color(0xFFE7E2D9)
            val INVERSE_PRIMARY = Color(0xFF6D5E00)
            val SURFACE_TINT = Color(0xFFE2C624)
        }

        object Light {
            val PRIMARY = Color(0xFF6D5E00)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFFFE249)
            val ON_PRIMARY_CONTAINER = Color(0xFF211B00)
            val SECONDARY = Color(0xFF6D5E00)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFFFE249)
            val ON_SECONDARY_CONTAINER = Color(0xFF211B00)
            val TERTIARY = Color(0xFF6D5E00)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFFFE249)
            val ON_TERTIARY_CONTAINER = Color(0xFF211B00)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFFFBFF)
            val ON_BACKGROUND = Color(0xFF1D1B16)
            val SURFACE = Color(0xFFFFFBFF)
            val ON_SURFACE = Color(0xFF1D1B16)
            val SURFACE_VARIANT = Color(0xFFE9E2D0)
            val ON_SURFACE_VARIANT = Color(0xFF4A4739)
            val OUTLINE = Color(0xFF7C7768)
            val INVERSE_ON_SURFACE = Color(0xFFF6F0E7)
            val INVERSE_SURFACE = Color(0xFF32302A)
            val INVERSE_PRIMARY = Color(0xFFE2C624)
            val SURFACE_TINT = Color(0xFF6D5E00)
        }
    }

    object Orange {
        object Dark {
            val PRIMARY = Color(0xFFFFB781)
            val ON_PRIMARY = Color(0xFF4E2600)
            val PRIMARY_CONTAINER = Color(0xFF6F3800)
            val ON_PRIMARY_CONTAINER = Color(0xFFFFDCC4)
            val SECONDARY = Color(0xFFFFB781)
            val ON_SECONDARY = Color(0xFF4E2600)
            val SECONDARY_CONTAINER = Color(0xFF6F3800)
            val ON_SECONDARY_CONTAINER = Color(0xFFFFDCC4)
            val TERTIARY = Color(0xFFFFB781)
            val ON_TERTIARY = Color(0xFF4E2600)
            val TERTIARY_CONTAINER = Color(0xFF6F3800)
            val ON_TERTIARY_CONTAINER = Color(0xFFFFDCC4)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF201A17)
            val ON_BACKGROUND = Color(0xFFECE0DA)
            val SURFACE = Color(0xFF201A17)
            val ON_SURFACE = Color(0xFFECE0DA)
            val SURFACE_VARIANT = Color(0xFF52443B)
            val ON_SURFACE_VARIANT = Color(0xFFD6C3B7)
            val OUTLINE = Color(0xFF9F8D82)
            val INVERSE_ON_SURFACE = Color(0xFF201A17)
            val INVERSE_SURFACE = Color(0xFFECE0DA)
            val INVERSE_PRIMARY = Color(0xFF924B00)
            val SURFACE_TINT = Color(0xFFFFB781)
        }

        object Light {
            val PRIMARY = Color(0xFF924B00)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFFFDCC4)
            val ON_PRIMARY_CONTAINER = Color(0xFF2F1400)
            val SECONDARY = Color(0xFF924B00)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFFFDCC4)
            val ON_SECONDARY_CONTAINER = Color(0xFF2F1400)
            val TERTIARY = Color(0xFF924B00)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFFFDCC4)
            val ON_TERTIARY_CONTAINER = Color(0xFF2F1400)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFFFBFF)
            val ON_BACKGROUND = Color(0xFF201A17)
            val SURFACE = Color(0xFFFFFBFF)
            val ON_SURFACE = Color(0xFF201A17)
            val SURFACE_VARIANT = Color(0xFFF3DFD2)
            val ON_SURFACE_VARIANT = Color(0xFF52443B)
            val OUTLINE = Color(0xFF84746A)
            val INVERSE_ON_SURFACE = Color(0xFFFBEEE8)
            val INVERSE_SURFACE = Color(0xFF362F2B)
            val INVERSE_PRIMARY = Color(0xFFFFB781)
            val SURFACE_TINT = Color(0xFF924B00)
        }
    }

    object Green {
        object Dark {
            val PRIMARY = Color(0xFF8CDB55)
            val ON_PRIMARY = Color(0xFF173800)
            val PRIMARY_CONTAINER = Color(0xFF245100)
            val ON_PRIMARY_CONTAINER = Color(0xFFA7F86E)
            val SECONDARY = Color(0xFF8CDB55)
            val ON_SECONDARY = Color(0xFF173800)
            val SECONDARY_CONTAINER = Color(0xFF245100)
            val ON_SECONDARY_CONTAINER = Color(0xFFA7F86E)
            val TERTIARY = Color(0xFF8CDB55)
            val ON_TERTIARY = Color(0xFF173800)
            val TERTIARY_CONTAINER = Color(0xFF245100)
            val ON_TERTIARY_CONTAINER = Color(0xFFA7F86E)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF1A1C18)
            val ON_BACKGROUND = Color(0xFFE3E3DC)
            val SURFACE = Color(0xFF1A1C18)
            val ON_SURFACE = Color(0xFFE3E3DC)
            val SURFACE_VARIANT = Color(0xFF44483E)
            val ON_SURFACE_VARIANT = Color(0xFFC4C8BB)
            val OUTLINE = Color(0xFF8E9286)
            val INVERSE_ON_SURFACE = Color(0xFF1A1C18)
            val INVERSE_SURFACE = Color(0xFFE3E3DC)
            val INVERSE_PRIMARY = Color(0xFF326B00)
            val SURFACE_TINT = Color(0xFF8CDB55)
        }

        object Light {
            val PRIMARY = Color(0xFF326B00)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFA7F86E)
            val ON_PRIMARY_CONTAINER = Color(0xFF0B2000)
            val SECONDARY = Color(0xFF326B00)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFA7F86E)
            val ON_SECONDARY_CONTAINER = Color(0xFF0B2000)
            val TERTIARY = Color(0xFF326B00)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFA7F86E)
            val ON_TERTIARY_CONTAINER = Color(0xFF0B2000)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFDFDF5)
            val ON_BACKGROUND = Color(0xFF1A1C18)
            val SURFACE = Color(0xFFFDFDF5)
            val ON_SURFACE = Color(0xFF1A1C18)
            val SURFACE_VARIANT = Color(0xFFE0E4D6)
            val ON_SURFACE_VARIANT = Color(0xFF44483E)
            val OUTLINE = Color(0xFF74796D)
            val INVERSE_ON_SURFACE = Color(0xFFF1F1EA)
            val INVERSE_SURFACE = Color(0xFF2F312C)
            val INVERSE_PRIMARY = Color(0xFF8CDB55)
            val SURFACE_TINT = Color(0xFF326B00)
        }
    }

    object Pink {
        object Dark {
            val PRIMARY = Color(0xFFF6ADFD)
            val ON_PRIMARY = Color(0xFF50155C)
            val PRIMARY_CONTAINER = Color(0xFF6A2E74)
            val ON_PRIMARY_CONTAINER = Color(0xFFFFD5FF)
            val SECONDARY = Color(0xFFF6ADFD)
            val ON_SECONDARY = Color(0xFF50155C)
            val SECONDARY_CONTAINER = Color(0xFF6A2E74)
            val ON_SECONDARY_CONTAINER = Color(0xFFFFD5FF)
            val TERTIARY = Color(0xFFF6ADFD)
            val ON_TERTIARY = Color(0xFF50155C)
            val TERTIARY_CONTAINER = Color(0xFF6A2E74)
            val ON_TERTIARY_CONTAINER = Color(0xFFFFD5FF)
            val ERROR = Color(0xFFFFB4AB)
            val ON_ERROR = Color(0xFF690005)
            val ERROR_CONTAINER = Color(0xFF93000A)
            val ON_ERROR_CONTAINER = Color(0xFFFFDAD6)
            val BACKGROUND = Color(0xFF1E1A1E)
            val ON_BACKGROUND = Color(0xFFE9E0E4)
            val SURFACE = Color(0xFF1E1A1E)
            val ON_SURFACE = Color(0xFFE9E0E4)
            val SURFACE_VARIANT = Color(0xFF4D444C)
            val ON_SURFACE_VARIANT = Color(0xFFD0C3CC)
            val OUTLINE = Color(0xFF998D96)
            val INVERSE_ON_SURFACE = Color(0xFF1E1A1E)
            val INVERSE_SURFACE = Color(0xFFE9E0E4)
            val INVERSE_PRIMARY = Color(0xFF84468E)
            val SURFACE_TINT = Color(0xFFF6ADFD)
        }

        object Light {
            val PRIMARY = Color(0xFF84468E)
            val ON_PRIMARY = Color(0xFFFFFFFF)
            val PRIMARY_CONTAINER = Color(0xFFFFD5FF)
            val ON_PRIMARY_CONTAINER = Color(0xFF350040)
            val SECONDARY = Color(0xFF84468E)
            val ON_SECONDARY = Color(0xFFFFFFFF)
            val SECONDARY_CONTAINER = Color(0xFFFFD5FF)
            val ON_SECONDARY_CONTAINER = Color(0xFF350040)
            val TERTIARY = Color(0xFF84468E)
            val ON_TERTIARY = Color(0xFFFFFFFF)
            val TERTIARY_CONTAINER = Color(0xFFFFD5FF)
            val ON_TERTIARY_CONTAINER = Color(0xFF350040)
            val ERROR = Color(0xFFBA1A1A)
            val ON_ERROR = Color(0xFFFFFFFF)
            val ERROR_CONTAINER = Color(0xFFFFDAD6)
            val ON_ERROR_CONTAINER = Color(0xFF410002)
            val BACKGROUND = Color(0xFFFFFBFF)
            val ON_BACKGROUND = Color(0xFF1E1A1E)
            val SURFACE = Color(0xFFFFFBFF)
            val ON_SURFACE = Color(0xFF1E1A1E)
            val SURFACE_VARIANT = Color(0xFFECDFE9)
            val ON_SURFACE_VARIANT = Color(0xFF4D444C)
            val OUTLINE = Color(0xFF7E747D)
            val INVERSE_ON_SURFACE = Color(0xFFF7EEF3)
            val INVERSE_SURFACE = Color(0xFF332F32)
            val INVERSE_PRIMARY = Color(0xFFF6ADFD)
            val SURFACE_TINT = Color(0xFF84468E)
        }
    }

    object CatppuccinMocha {
        val BACKGROUND = Color(getMochaColors().base.hex.asLong())
        val SURFACE = Color(getMochaColors().base.hex.asLong())
        val ON_PRIMARY = Color(getMochaColors().crust.hex.asLong())
        val ON_SURFACE = Color(getMochaColors().text.hex.asLong())
        val SURFACE_VARIANT = Color(getMochaColors().surface0.hex.asLong())
        val ON_SURFACE_VARIANT = Color(getMochaColors().text.hex.asLong())
        val ROSEWATER = Color(getMochaColors().rosewater.hex.asLong())
        val FLAMINGO = Color(getMochaColors().flamingo.hex.asLong())
        val PINK = Color(getMochaColors().pink.hex.asLong())
        val MAUVE = Color(getMochaColors().mauve.hex.asLong())
        val RED = Color(getMochaColors().red.hex.asLong())
        val MAROON = Color(getMochaColors().maroon.hex.asLong())
        val PEACH = Color(getMochaColors().peach.hex.asLong())
        val YELLOW = Color(getMochaColors().yellow.hex.asLong())
        val GREEN = Color(getMochaColors().green.hex.asLong())
        val TEAL = Color(getMochaColors().teal.hex.asLong())
        val SKY = Color(getMochaColors().sky.hex.asLong())
        val SAPPHIRE = Color(getMochaColors().sapphire.hex.asLong())
        val BLUE = Color(getMochaColors().blue.hex.asLong())
        val LAVENDER = Color(getMochaColors().lavender.hex.asLong())
    }

    object CatppuccinMacchiato {
        val BACKGROUND = Color(getMacchiatoColors().base.hex.asLong())
        val SURFACE = Color(getMacchiatoColors().base.hex.asLong())
        val ON_PRIMARY = Color(getMacchiatoColors().crust.hex.asLong())
        val ON_SURFACE = Color(getMacchiatoColors().text.hex.asLong())
        val SURFACE_VARIANT = Color(getMacchiatoColors().surface0.hex.asLong())
        val ON_SURFACE_VARIANT = Color(getMacchiatoColors().text.hex.asLong())
        val ROSEWATER = Color(getMacchiatoColors().rosewater.hex.asLong())
        val FLAMINGO = Color(getMacchiatoColors().flamingo.hex.asLong())
        val PINK = Color(getMacchiatoColors().pink.hex.asLong())
        val MAUVE = Color(getMacchiatoColors().mauve.hex.asLong())
        val RED = Color(getMacchiatoColors().red.hex.asLong())
        val MAROON = Color(getMacchiatoColors().maroon.hex.asLong())
        val PEACH = Color(getMacchiatoColors().peach.hex.asLong())
        val YELLOW = Color(getMacchiatoColors().yellow.hex.asLong())
        val GREEN = Color(getMacchiatoColors().green.hex.asLong())
        val TEAL = Color(getMacchiatoColors().teal.hex.asLong())
        val SKY = Color(getMacchiatoColors().sky.hex.asLong())
        val SAPPHIRE = Color(getMacchiatoColors().sapphire.hex.asLong())
        val BLUE = Color(getMacchiatoColors().blue.hex.asLong())
        val LAVENDER = Color(getMacchiatoColors().lavender.hex.asLong())
    }

    object CatppuccinFrappe {
        val BACKGROUND = Color(getFrappeColors().base.hex.asLong())
        val SURFACE = Color(getFrappeColors().base.hex.asLong())
        val ON_PRIMARY = Color(getFrappeColors().crust.hex.asLong())
        val ON_SURFACE = Color(getFrappeColors().text.hex.asLong())
        val SURFACE_VARIANT = Color(getFrappeColors().surface0.hex.asLong())
        val ON_SURFACE_VARIANT = Color(getFrappeColors().text.hex.asLong())
        val ROSEWATER = Color(getFrappeColors().rosewater.hex.asLong())
        val FLAMINGO = Color(getFrappeColors().flamingo.hex.asLong())
        val PINK = Color(getFrappeColors().pink.hex.asLong())
        val MAUVE = Color(getFrappeColors().mauve.hex.asLong())
        val RED = Color(getFrappeColors().red.hex.asLong())
        val MAROON = Color(getFrappeColors().maroon.hex.asLong())
        val PEACH = Color(getFrappeColors().peach.hex.asLong())
        val YELLOW = Color(getFrappeColors().yellow.hex.asLong())
        val GREEN = Color(getFrappeColors().green.hex.asLong())
        val TEAL = Color(getFrappeColors().teal.hex.asLong())
        val SKY = Color(getFrappeColors().sky.hex.asLong())
        val SAPPHIRE = Color(getFrappeColors().sapphire.hex.asLong())
        val BLUE = Color(getFrappeColors().blue.hex.asLong())
        val LAVENDER = Color(getFrappeColors().lavender.hex.asLong())
    }

    object CatppuccinLatte {
        val BACKGROUND = Color(getLatteColors().base.hex.asLong())
        val SURFACE = Color(getLatteColors().base.hex.asLong())
        val ON_PRIMARY = Color(getLatteColors().crust.hex.asLong())
        val ON_SURFACE = Color(getLatteColors().text.hex.asLong())
        val SURFACE_VARIANT = Color(getLatteColors().crust.hex.asLong())
        val ON_SURFACE_VARIANT = Color(getLatteColors().text.hex.asLong())
        val ROSEWATER = Color(getLatteColors().rosewater.hex.asLong())
        val FLAMINGO = Color(getLatteColors().flamingo.hex.asLong())
        val PINK = Color(getLatteColors().pink.hex.asLong())
        val MAUVE = Color(getLatteColors().mauve.hex.asLong())
        val RED = Color(getLatteColors().red.hex.asLong())
        val MAROON = Color(getLatteColors().maroon.hex.asLong())
        val PEACH = Color(getLatteColors().peach.hex.asLong())
        val YELLOW = Color(getLatteColors().yellow.hex.asLong())
        val GREEN = Color(getLatteColors().green.hex.asLong())
        val TEAL = Color(getLatteColors().teal.hex.asLong())
        val SKY = Color(getLatteColors().sky.hex.asLong())
        val SAPPHIRE = Color(getLatteColors().sapphire.hex.asLong())
        val BLUE = Color(getLatteColors().blue.hex.asLong())
        val LAVENDER = Color(getLatteColors().lavender.hex.asLong())
    }

    object WhiskersPanther {
        val BACKGROUND = Color(getPantherPalette().neutralTwo.asLong())
        val SURFACE = Color(getPantherPalette().neutralTwo.asLong())
        val ON_PRIMARY = Color(getPantherPalette().neutral.asLong())
        val ON_SURFACE = Color(getPantherPalette().text.asLong())
        val SURFACE_VARIANT = Color(getPantherPalette().neutralFor.asLong())
        val ON_SURFACE_VARIANT = Color(getPantherPalette().text.asLong())
        val BANANA = Color(getPantherPalette().banana.asLong())
        val BLUEBERRY = Color(getPantherPalette().blueberry.asLong())
        val CHERRY = Color(getPantherPalette().cherry.asLong())
        val GRAPE = Color(getPantherPalette().grape.asLong())
        val KIWI = Color(getPantherPalette().kiwi.asLong())
        val TANGERINE = Color(getPantherPalette().tangerine.asLong())
    }

    object WhiskersTiger {
        val BACKGROUND = Color(getTigerPalette().neutralTwo.asLong())
        val SURFACE = Color(getTigerPalette().neutralTwo.asLong())
        val ON_PRIMARY = Color(getTigerPalette().neutral.asLong())
        val ON_SURFACE = Color(getTigerPalette().text.asLong())
        val SURFACE_VARIANT = Color(getTigerPalette().neutralFor.asLong())
        val ON_SURFACE_VARIANT = Color(getTigerPalette().text.asLong())
        val BANANA = Color(getTigerPalette().banana.asLong())
        val BLUEBERRY = Color(getTigerPalette().blueberry.asLong())
        val CHERRY = Color(getTigerPalette().cherry.asLong())
        val GRAPE = Color(getTigerPalette().grape.asLong())
        val KIWI = Color(getTigerPalette().kiwi.asLong())
        val TANGERINE = Color(getTigerPalette().tangerine.asLong())
    }
}